
http {
  host = "0.0.0.0"
  port = 9081
}

akka {
  http {
    host = ${http.host}
    port = ${http.port}
    version = "10.0.10"

    server {
      server-header = akka-http/${akka.http.version}

      preview {
        enable-http2 = off
      }
      idle-timeout = 60 s
      request-timeout = 20 s

      # The time period within which the TCP binding process must be completed.
      bind-timeout = 1s

      # Default port to bind HTTP server to when no port was explicitly given.
      default-http-port = 80

      # Default port to bind HTTPS server to when no port was explicitly given.
      default-https-port = 443

      linger-timeout = 1 min
      max-connections = 2048
      pipelining-limit = 16
      remote-address-header = off
      raw-request-uri-header = off
      transparent-head-requests = on
      verbose-error-messages = off
      response-header-size-hint = 512
      backlog = 100
      default-host-header = ""
      socket-options {
        so-receive-buffer-size = undefined
        so-send-buffer-size = undefined
        so-reuse-address = undefined
        so-traffic-class = undefined
        tcp-keep-alive = undefined
        tcp-oob-inline = undefined
        tcp-no-delay = undefined
      }

      # Modify to tweak parsing settings on the server-side only.
      parsing {
        # no overrides by default, see `akka.http.parsing` for default values
      }

      log-unencrypted-network-bytes = off

      http2 {
        request-entity-chunk-size = 65536 b
        incoming-connection-level-buffer-size = 10 MB
        incoming-stream-level-buffer-size = 512kB
      }
    }

    parsing {
      # The limits for the various parts of the HTTP message parser.
      max-uri-length             = 2k
      max-method-length          = 16
      max-response-reason-length = 64
      max-header-name-length     = 64
      max-header-value-length    = 8k
      max-header-count           = 64
      max-chunk-ext-length       = 256
      max-chunk-size             = 1m

      max-content-length = 8m

      uri-parsing-mode = strict

      cookie-parsing-mode = rfc6265

      illegal-header-warnings = on

      modeled-header-parsing = on
      error-logging-verbosity = full

      illegal-response-header-value-processing-mode = error

      # limits for the number of different values per header type that the
      # header cache will hold
      header-cache {
        default = 12
        Content-MD5 = 0
        Date = 0
        If-Match = 0
        If-Modified-Since = 0
        If-None-Match = 0
        If-Range = 0
        If-Unmodified-Since = 0
        User-Agent = 32
      }

      tls-session-info-header = off
    }

    client {
      user-agent-header = akka-http/${akka.http.version}

      connecting-timeout = 10s

      idle-timeout = 60 s

      request-header-size-hint = 512

      socket-options {
        so-receive-buffer-size = undefined
        so-send-buffer-size = undefined
        so-reuse-address = undefined
        so-traffic-class = undefined
        tcp-keep-alive = undefined
        tcp-oob-inline = undefined
        tcp-no-delay = undefined
      }

      # Modify to tweak parsing settings on the client-side only.
      parsing {
        # no overrides by default, see `akka.http.parsing` for default values
      }
      log-unencrypted-network-bytes = off
    }

    host-connection-pool {
      max-connections = 1024
      min-connections = 0
      max-retries = 3
      max-open-requests = 512
      pipelining-limit = 128
      idle-timeout = 30 s
      pool-implementation = new
      response-entity-subscription-timeout = 1.second
      client = {
        # no overrides by default, see `akka.http.client` for default values
      }
    }

    client = {
      # no overrides by default, see `akka.http.client` for default values
    }
  }
}

akka {
  stream {
    materializer {

      # Initial size of buffers used in stream elements
      initial-input-buffer-size = 128
      # Maximum size of buffers used in stream elements
      max-input-buffer-size = 1024

      # Fully qualified config path which holds the dispatcher configuration
      # to be used by FlowMaterialiser when creating Actors.
      # When this value is left empty, the default-dispatcher will be used.
      dispatcher = "akka.stream.my-blocking-dispatcher"

      subscription-timeout {
        mode = cancel
        timeout = 5s
      }

      # Enable additional troubleshooting logging at DEBUG log level
      debug-logging = off

      # Maximum number of elements emitted in batch if downstream signals large demand
      output-burst-limit = 1000

      auto-fusing = on

      max-fixed-buffer-size = 1000000000

      sync-processing-limit = 1000

      debug {
        fuzzing-mode = off
      }

      io = {
        tcp {
          write-buffer-size = 2048
        }
      }
    }

    blocking-io-dispatcher = "akka.stream.my-blocking-dispatcher"
    my-blocking-dispatcher {
      type = Dispatcher
      executor = "thread-pool-executor"
      thread-pool-executor {
        fixed-pool-size = 200
      }
      throughput = 1
    }
  }

  ssl-config {
    default = true
    protocol = "TLSv1.2"
  }
}

ssl-config {
  logger = "com.typesafe.sslconfig.akka.util.AkkaLoggerBridge"
  default = true
  protocol = "TLSV1.2"
  checkRevocation = false
  revocationLists = []
  debug = {
    certpath = true
    all = true
  }
  loose = {
    allowWeakProtocols = false
    allowWeakCiphers = false
    allowLegacyHelloMessages = false
    allowUnsafeRenegotiation = false
    disableHostnameVerification = true
    disableSNI = true
    acceptAnyCertificate = true
  }
  enabledCipherSuites = []
  enabledProtocols = []
  disabledSignatureAlgorithms = []
  disabledKeyAlgorithms = []
  keyManager = {
    stores = []
    prototype.stores = {}
  }
  trustManager = {
    stores = []
    prototype.stores = {}
  }
  sslParameters = {
    protocols = []
  }
}

my-blocking-dispatcher {
  type = Dispatcher
  executor = "thread-pool-executor"
  thread-pool-executor {
    fixed-pool-size = 200
  }
  throughput = 1
}

akka.http.routing {
  verbose-error-messages = off
  file-get-conditional = on
  render-vanity-footer = yes
  range-coalescing-threshold = 80

  range-count-limit = 1024

  decode-max-bytes-per-chunk = 1m

  file-io-dispatcher = ${akka.stream.blocking-io-dispatcher}
}

netty {
  ssl = false
  boss-group-threads = 1
  work-group-threads = 1
}

database = {
  jdbc-url = "jdbc:postgresql://localhost/akka-http-rest"
  jdbc-url = ${?JDBC_URL}
  username = "postgres"
  username = ${?JDBC_USER}
  password = "test"
  password = ${?JDBC_PASSWORD}
}

